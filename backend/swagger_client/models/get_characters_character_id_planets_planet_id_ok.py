# coding: utf-8

"""
    EVE Swagger Interface

    An OpenAPI for EVE Online  # noqa: E501

    OpenAPI spec version: 1.19
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.configuration import Configuration


class GetCharactersCharacterIdPlanetsPlanetIdOk(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'links': 'list[GetCharactersCharacterIdPlanetsPlanetIdLink]',
        'pins': 'list[GetCharactersCharacterIdPlanetsPlanetIdPin]',
        'routes': 'list[GetCharactersCharacterIdPlanetsPlanetIdRoute]'
    }

    attribute_map = {
        'links': 'links',
        'pins': 'pins',
        'routes': 'routes'
    }

    def __init__(self, links=None, pins=None, routes=None, _configuration=None):  # noqa: E501
        """GetCharactersCharacterIdPlanetsPlanetIdOk - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._links = None
        self._pins = None
        self._routes = None
        self.discriminator = None

        self.links = links
        self.pins = pins
        self.routes = routes

    @property
    def links(self):
        """Gets the links of this GetCharactersCharacterIdPlanetsPlanetIdOk.  # noqa: E501

        links array  # noqa: E501

        :return: The links of this GetCharactersCharacterIdPlanetsPlanetIdOk.  # noqa: E501
        :rtype: list[GetCharactersCharacterIdPlanetsPlanetIdLink]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this GetCharactersCharacterIdPlanetsPlanetIdOk.

        links array  # noqa: E501

        :param links: The links of this GetCharactersCharacterIdPlanetsPlanetIdOk.  # noqa: E501
        :type: list[GetCharactersCharacterIdPlanetsPlanetIdLink]
        """
        if self._configuration.client_side_validation and links is None:
            raise ValueError("Invalid value for `links`, must not be `None`")  # noqa: E501

        self._links = links

    @property
    def pins(self):
        """Gets the pins of this GetCharactersCharacterIdPlanetsPlanetIdOk.  # noqa: E501

        pins array  # noqa: E501

        :return: The pins of this GetCharactersCharacterIdPlanetsPlanetIdOk.  # noqa: E501
        :rtype: list[GetCharactersCharacterIdPlanetsPlanetIdPin]
        """
        return self._pins

    @pins.setter
    def pins(self, pins):
        """Sets the pins of this GetCharactersCharacterIdPlanetsPlanetIdOk.

        pins array  # noqa: E501

        :param pins: The pins of this GetCharactersCharacterIdPlanetsPlanetIdOk.  # noqa: E501
        :type: list[GetCharactersCharacterIdPlanetsPlanetIdPin]
        """
        if self._configuration.client_side_validation and pins is None:
            raise ValueError("Invalid value for `pins`, must not be `None`")  # noqa: E501

        self._pins = pins

    @property
    def routes(self):
        """Gets the routes of this GetCharactersCharacterIdPlanetsPlanetIdOk.  # noqa: E501

        routes array  # noqa: E501

        :return: The routes of this GetCharactersCharacterIdPlanetsPlanetIdOk.  # noqa: E501
        :rtype: list[GetCharactersCharacterIdPlanetsPlanetIdRoute]
        """
        return self._routes

    @routes.setter
    def routes(self, routes):
        """Sets the routes of this GetCharactersCharacterIdPlanetsPlanetIdOk.

        routes array  # noqa: E501

        :param routes: The routes of this GetCharactersCharacterIdPlanetsPlanetIdOk.  # noqa: E501
        :type: list[GetCharactersCharacterIdPlanetsPlanetIdRoute]
        """
        if self._configuration.client_side_validation and routes is None:
            raise ValueError("Invalid value for `routes`, must not be `None`")  # noqa: E501

        self._routes = routes

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetCharactersCharacterIdPlanetsPlanetIdOk, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetCharactersCharacterIdPlanetsPlanetIdOk):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, GetCharactersCharacterIdPlanetsPlanetIdOk):
            return True

        return self.to_dict() != other.to_dict()
